@{
    ViewData["Title"] = "Chi tiết sản phẩm";
}

@model Clothing_Store.Models.ProductDetailViewModel


@if (true)
{
    ProductDetailViewModel vm = Model;
    Product detail = vm.detail;
    ICollection<ProductViewModel> relative = vm.ralativeProducts;

    //shuffle element randomly
    Random random = new Random();
    relative = relative.OrderBy(x => random.Next()).ToList();
    ICollection<int> relativeIds = relative.Select(r => r.ID).Distinct().Take(4).ToList();

    int totalRatings = 0;
    if (detail.ratings.Count > 0) {
        totalRatings = (int)Math.Round(detail.ratings.Average(r => r.Star));
    }

    Image mainImg = detail.images.FirstOrDefault();

    <section class="__section __product-detail">
        <div class="__details __container-md">
            <div class="__left">
                <div class="__main">
                    <img src="~/uploads/product/@mainImg.URL" alt="@mainImg.Name">
                </div>
                <div class="__thumbnails">
                    @foreach (Image img in detail.images)
                    {
                        <div class="__thumbnail">
                            <img src="~/uploads/product/@img.URL" alt="@img.Name">
                        </div>
                    }
                </div>
            </div>
            <div class="__right">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb bg-body">
                        <li class="breadcrumb-item"><a asp-action="">Sản phẩm</a></li>
                        <li class="breadcrumb-item active" aria-current="page">@detail.Name</li>
                    </ol>
                </nav>
                <h1>@detail.Name</h1>
                <div class="__rating-sold">
                    <div class="__rating">
                        @for (int i = 0; i < totalRatings; i++)
                        {
                            <i class="bx bxs-star"></i>
                        }

                        @for (int i = 0; i < 5 - totalRatings; i++)
                        {
                            <i class="bx bx-star"></i>
                        }
                    </div>
                    <div class="__divider">|</div>
                    <div class="__sold">
                        Đã bán: @detail.warehouses.Sum(w => w.Sold)
                    </div>
                </div>
                <div class="__price-detail">
                    @if (detail.promotion != null && detail.promotion.Discount > 0 && detail.promotion.From <= DateTime.Now)
                    {
                        var rawDiscountPrice = detail.Price - (detail.Price * ((double)detail.promotion.Discount / 100));
                        var discountPrice = Math.Round(rawDiscountPrice / 1000) * 1000;

                        <div class="__final-price">@(discountPrice.ToString("#,###", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))đ</div>
                        <div class="__original-price">@(detail.Price.ToString("#,###", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))đ</div>
                        <div class="__discount-percent">-@detail.promotion.Discount%</div>
                    }
                    else if (detail.promotion == null || detail.promotion.Discount == 0)
                    {
                        <div class="__final-price">@(detail.Price.ToString("#,###", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))đ</div>
                    }
                </div>
                <form method="post" asp-controller="Cart" asp-action="Add" id="addToCartForm">
                    <input hidden value="@detail.ID" name="productID" />
                    <div class="__select-block">
                        <div class="__select-title">Màu sắc</div>
                        <div class="__select-option">
                            <select name="color" id="product_color">
                                <option value="selectColor" selected disabled>Chọn màu</option>
                                @foreach (string c in detail.warehouses.Select(w => w.Color).Distinct().ToList())
                                {
                                    <option value="@c">@c</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="__select-block">
                        <div class="__select-title">Kích thước</div>
                        <div class="__select-option">
                            <select name="size" id="product_size">
                                <option value="selectSize" selected disabled>Chọn size</option>
                                @foreach (string s in detail.warehouses.Select(w => w.Size).Distinct().ToList())
                                {
                                    <option value="@s">@s</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div style="display: flex;" class="__select-block">
                        <div class="__select-title">Số lượng</div>
                        <div class="quantity buttons_added">
                            <input type="button" value="-" class="minus">
                            <input type="number" step="1" min="1" max="" name="quantity" value="1" title="Qty" class="input-text qty text" size="4" pattern="" inputmode="">
                            <input type="button" value="+" class="plus">
                        </div>
                        <div style='align-self: center; color: #939191; font-size: 1.3rem; margin-left: 1.5rem;'>(Đơn vị: Cái)</div>
                    </div>

                    <div id="errorMess" class="text-danger"></div>

                    <div class="__form">
                        <div class="d-flex align-items-center">
                            <div>
                                <button id="addToCartBtn" type="submit" class="_btn d-flex">Thêm vào giỏ hàng</button>
                            </div>
                        </div>
                    </div>
                </form>

                <div class="__highlight-services">
                    <hr>
                    <div class="__highlight-services-items">
                        <div class="card">
                            <img src="~/images/icon1.png" class="card-img-top" alt="...">
                            <div class="card-body">
                                <p class="card-text">Đổi trả cực dễ chỉ cần số điện thoại</p>
                            </div>
                        </div>

                        <div class="card">
                            <img src="~/images/icon2.png" class="card-img-top" alt="...">
                            <div class="card-body">
                                <p class="card-text">60 ngày đổi trả vì bất kỳ lý do gì</p>
                            </div>
                        </div>

                        <div class="card">
                            <img src="~/images/icon3.png" class="card-img-top" alt="...">
                            <div class="card-body">
                                <p class="card-text">Giao hàng 2-5 ngày (có thể lâu hơn do Covid19)</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <section class="__section-feature __container-md">
        <ul class="nav nav-tabs __nav-tab" id="myTab" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="detail-tab" data-bs-toggle="tab" data-bs-target="#detail" type="button" role="tab" aria-controls="detail" aria-selected="true">Chi tiết sản phẩm</button>
            </li>
        </ul>
        <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active p-3 __product-detail-content" id="detail" role="tabpanel" aria-labelledby="detail-tab">
                @detail.Description
            </div>
        </div>
    </section>

    <!-- Related -->
    <section class="__section __featured mb-5">
        <div class="__top __container">
            <h1>Sản phẩm tương tự</h1>
        </div>

        <div class="__product-center __container">
            @foreach (int id in relativeIds)
            {
                ProductViewModel product = relative.Where(r => r.ID == id).FirstOrDefault();
                if (product != null)
                {
                    <div class="__product">
                        <div class="__product-header">
                            <img src="~/uploads/product/@product.image.URL" alt="@product.image.Name">
                            @if (product.discount != 0) {
                                <img style="width: 7rem; height: 5rem; position: absolute; top: 1%; right: 2%" src="~/images/sales.png" alt="discount">
                                <span style="position: absolute; top: 6.5%; right: 9%; color: red; font-size: 1.4rem;">-@product.discount%</span>
                            }
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ID">
                                <ul class="icons">
                                    <span><i class='bx bxs-show show-icons'></i></span>
                                </ul>
                            </a>
                        </div>
                        <div class="__product-footer">
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ID">
                                <h3>@product.Name</h3>
                            </a>
                            <div class="__rating">
                                @for (int i = 0; i < product.ratings; i++)
                                {
                                    <i class="bx bxs-star"></i>
                                }

                                @for (int i = 0; i < 5 - product.ratings; i++)
                                {
                                    <i class="bx bx-star"></i>
                                }
                            </div>
                            <h4 class="__price">@(product.Price.ToString("#,###", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))đ</h4>
                        </div>
                    </div>
                }
            }
        </div>
    </section>
}
<div class="__wrapper" id="toast_success">
    <div id="toast">
        <div class="container-1">
            <i class='bx bx-cart'></i>
        </div>
        <div class="container-2 my-2">
            <p class="toast-sta"></p>
            <p class="toast-msg"></p>
        </div>
        <button id="close">
            <i class='bx bx-x'></i>
        </button>
    </div>
</div>

<script>
function wcqib_refresh_quantity_increments() {
    jQuery(
        "div.quantity:not(.buttons_added), td.quantity:not(.buttons_added)"
    ).each(function (a, b) {
        var c = jQuery(b);
        c.addClass("buttons_added"),
            c
                .children()
                .first()
                .before('<input type="button" value="-" class="minus" />'),
            c
                .children()
                .last()
                .after('<input type="button" value="+" class="plus" />');
    });
}
String.prototype.getDecimals ||
    (String.prototype.getDecimals = function () {
        var a = this,
            b = ("" + a).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
        return b
            ? Math.max(0, (b[1] ? b[1].length : 0) - (b[2] ? +b[2] : 0))
            : 0;
    }),
    jQuery(document).ready(function () {
        wcqib_refresh_quantity_increments();
    }),
    jQuery(document).on("updated_wc_div", function () {
        wcqib_refresh_quantity_increments();
    }),
    jQuery(document).on("click", ".plus, .minus", function () {
        var a = jQuery(this).closest(".quantity").find(".qty"),
            b = parseFloat(a.val()),
            c = parseFloat(a.attr("max")),
            d = parseFloat(a.attr("min")),
            e = a.attr("step");
        (b && "" !== b && "NaN" !== b) || (b = 0),
            ("" !== c && "NaN" !== c) || (c = ""),
            ("" !== d && "NaN" !== d) || (d = 0),
            ("any" !== e &&
                "" !== e &&
                void 0 !== e &&
                "NaN" !== parseFloat(e)) ||
                (e = 1),
            jQuery(this).is(".plus")
                ? c && b >= c
                    ? a.val(c)
                    : a.val((b + parseFloat(e)).toFixed(e.getDecimals()))
                : d && b <= d
                ? a.val(d)
                : b > 0 && a.val((b - parseFloat(e)).toFixed(e.getDecimals())),
            a.trigger("change");
    });
</script>